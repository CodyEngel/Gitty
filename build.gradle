// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.versions = [
            androidGradle   : '4.1.0',
            androidXCore    : '1.3.2',
            apollo          : "2.4.1",
            appAuth         : "0.7.1",
            appcompat       : '1.2.0',
            coil            : '1.0.0',
            constraintLayout: '2.0.4',
            coroutines      : "1.3.6",
            dagger          : '2.29.1',
            detekt          : "1.9.0",
            junit5          : '5.7.0',
            kotlin          : '1.4.20',
            lifecycle       : "2.2.0",
            navigation      : '2.3.1',
            okHttp          : '4.9.0',
            recyclerView    : "1.1.0"
    ]

    ext.api = [
            dagger: [
                    "com.google.dagger:dagger:${versions.dagger}",
                    "com.google.dagger:dagger-android:${versions.dagger}"
            ]
    ]

    ext.deps = [
            androidX  : [
                    "androidx.appcompat:appcompat:${versions.appcompat}",
                    "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}",
                    "androidx.core:core-ktx:${versions.androidXCore}",
                    "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}",
                    "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}",
                    "androidx.navigation:navigation-fragment-ktx:${versions.navigation}",
                    "androidx.navigation:navigation-ui-ktx:${versions.navigation}",
                    "androidx.recyclerview:recyclerview:${versions.recyclerView}"
            ],
            apollo    : [
                    "com.apollographql.apollo:apollo-runtime:${versions.apollo}",
                    "com.apollographql.apollo:apollo-coroutines-support:${versions.apollo}"
            ],
            appAuth   : "net.openid:appauth:${versions.appAuth}",
            coil      : "io.coil-kt:coil:${versions.coil}",
            coroutines: [
                    "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}",
                    "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
            ],
            junit5    : "org.junit.jupiter:junit-jupiter-api:${versions.junit5}",
            kotlin    : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}",
            okHttp    : "com.squareup.okhttp3:okhttp:${versions.okHttp}"
    ]

    ext.runtime = [
            "org.junit.jupiter:junit-jupiter-engine:${versions.junit5}"
    ]

    ext.procs = [
            dagger: [
                    "com.google.dagger:dagger-compiler:${versions.dagger}",
                    "com.google.dagger:dagger-android-processor:${versions.dagger}"
            ]
    ]

    ext.classpaths = [
            androidGradle: "com.android.tools.build:gradle:${versions.androidGradle}",
            apollo       : "com.apollographql.apollo:apollo-gradle-plugin:${versions.apollo}",
            detekt       : "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:${versions.detekt}",
            kotlin       : "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
    ]

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
        google()
    }
    dependencies {
        classpath classpaths.androidGradle
        classpath classpaths.apollo
        classpath classpaths.detekt
        classpath classpaths.kotlin
    }
}

allprojects {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
        google()
    }

    apply from: "$rootDir/detekt.gradle"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
